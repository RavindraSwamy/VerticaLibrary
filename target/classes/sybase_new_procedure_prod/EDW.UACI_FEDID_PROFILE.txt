create procedure EDW.UACI_FEDID_PROFILE()
begin
  select FED_ID,
    cast(null as varchar(25)) as UCIC,
    cast(null as varchar(25)) as USERID,
    min(ACTIVATION_DATE) as ACTIVATION_DATE,
    Min(FIRST_LOGIN_DATE) as FIRST_LOGIN_DATE,
    Max(LAST_LOGIN_DATE) as LAST_LOGIN_DATE,
    cast(null as varchar(5)) as FD_OPENED,
    cast(null as varchar(5)) as RD_OPENED,
    cast(null as varchar(5)) as FT_DONE,
    cast(null as varchar(5)) as BP_DONE,
    cast(null as varchar(5)) as PMR_DONE,
    SUM(FT_COUNT) as FT_COUNT,
    sum(RIB_LOGIN_COUNT) as RIB_LOGIN_COUNT,
    cast(null as varchar(20)) as RIB_RAISED_SR,
    cast(null as varchar(5)) as CHEQUE_BOOK_REQUEST,
    cast(null as varchar(5)) as MY_MONEY,
    cast(null as varchar(5)) as IWISH,
    MAX(MY_MONEY_ACTIVATION_DATE) as MY_MONEY_ACTIVATION_DATE,
    cast(null as varchar(20)) as TITLE,
    cast(null as varchar(80)) as FULL_NAME,
    cast(null as date) as BIRTH_DATE,
    cast(null as varchar(5)) as GENDER,
    cast(null as integer) as AGE,
    cast(null as varchar(80)) as OCCUPATION,
    cast(null as varchar(5)) as MARRIED,
    cast(null as varchar(5)) as IMOBILE_ACTIVE,
    cast(null as varchar(5)) as INTERNET_ACTIVE,
    cast(null as varchar(5)) as ATM_ACTIVE,
    cast(null as varchar(5)) as POS_ACTIVE,
    cast(null as varchar(5)) as BRANCH_ACTIVE,
    cast(null as varchar(5)) as LIABILITY_ACCT_HOLDER,
    cast(null as varchar(5)) as CARD_ACCT_HOLDER,
    cast(null as varchar(5)) as DEMAT_ACCT_HOLDER,
    cast(null as varchar(5)) as LOAN_ACCT_HOLDER,
    cast(null as varchar(5)) as MOBILE_ACCT_HOLDER,
    cast(null as varchar(5)) as OTHER_ACCT_HOLDER,
    cast(null as varchar(5)) as SERVICE_REQUEST_OPEN,
    cast(null as varchar(5)) as DELIVERABLE_IN_TRANSIT,
    cast(null as date) as LAST_CALLCENTER_CONTACT_DATE,
    cast(null as varchar(5)) as SERVICE_SEGMENT,
    cast(null as varchar(5)) as INCOME_SEGMENT,
    cast(null as integer) as CREDIT_SCORE,
    cast(null as varchar(5)) as DNC,
    cast(null as varchar(5)) as NDNC,
    cast(null as varchar(5)) as DELINQUENT_CUSTOMER,
    cast(null as varchar(5)) as FRAUD_CUSTOMER_FLAG,
    cast(null as date) as AS_OF_DATE,
    cast(null as numeric(20)) as ANNUAL_SALARY_OR_TURNOVER,
    cast(null as varchar(10)) as HAVE_KIDS,
    cast(null as varchar(10)) as SOCIAL_MEDIA_ACTIVE,
    cast(null as varchar(10)) as SENTIMENT_GREVIENCES,
    cast(null as varchar(30)) as BLOCKED_CREDIT_CARD,
    cast(null as varchar(10)) as DORMANT_DEMAT_ACCOUNT,
    cast(null as varchar(80)) as EMAILID,
    cast(null as varchar(15)) as MOBILE_NUMBER,
    cast(null as varchar(10)) as FOREX_ACTIVE,
    cast(null as varchar(10)) as TRAVEL_INSURANCE_ACTIVE,
    cast(null as varchar(10)) as TRAVEL_CARD_ACTIVE,
    cast(null as varchar(10)) as ECOMMERECE_ACTIVE,
    cast(null as varchar(10)) as PREF_MERCHANT_SHOPPING,
    cast(null as varchar(10)) as PREF_MERCHANT_DINNING,
    cast(null as varchar(80)) as DEVICETYPE,
    cast(null as varchar(10)) as BROWSED_TIME,
    cast(null as varchar(80)) as BROWSED_SECTION,
    cast(null as date) as I_LAST_LOGIN_DATE,
    cast(null as varchar(10)) as REFEREENAME,
    cast(null as varchar(10)) as REFEREEMOBILENO,
    cast(null as integer) as DEVICESTATUS,
    cast(null as date) as DEVICEACTIVATIONDATE,
    cast(null as integer) as NO_OF_LOGINS,
    cast(null as varchar(10)) as I_CHEQUE_BOOK_REQUEST,
    cast(null as date) as LOG_DATE,
    cast(null as varchar(25)) as NEW_MOB_NO_REG,
    cast(null as varchar(25)) as UPDATE_MOB_NO_REG,
    cast(null as varchar(25)) as OLD_REGISTERED_MOBILE_NO,
    cast(null as varchar(100)) as MAREKTING_FIELD1,
    cast(null as varchar(100)) as MAREKTING_FIELD2,
    cast(null as varchar(100)) as MAREKTING_FIELD3,
    cast(null as varchar(100)) as MAREKTING_FIELD4,
    cast(null as varchar(100)) as MAREKTING_FIELD5,
    cast(null as varchar(100)) as MAREKTING_FIELD6,
    cast(null as varchar(100)) as MAREKTING_FIELD7,
    cast(null as varchar(100)) as MAREKTING_FIELD8,
    cast(null as varchar(100)) as MAREKTING_FIELD9,
    cast(null as varchar(100)) as MAREKTING_FIELD10,
    cast(null as varchar(5)) as POCKETS_ACTIVE,
    SHOPPING_ACTIVE
    into reconp.UACI_FEDID_PROFILE2
    from MCCM.RIB_CHANNEL_ATTRIBUTE where FED_ID is not null
    group by fed_id,SHOPPING_ACTIVE;
  create unique hg index UQHGIDX_MCCMFEDIDPROF_1 on reconp.UACI_FEDID_PROFILE2(FED_ID);
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  select FED_ID,USERID,LAST_LOGIN_DATE into #userid_base from MCCM.RIB_CHANNEL_ATTRIBUTE
    where FED_ID is not null group by FED_ID,USERID,LAST_LOGIN_DATE;
  update reconp.UACI_FEDID_PROFILE2 as A
    set a.USERID = b.USERID from
    #userid_base as b
    where a.fed_id = b.fed_id
    and a.LAST_LOGIN_DATE = b.LAST_LOGIN_DATE;
  update reconp.UACI_FEDID_PROFILE2 as A
    set a.USERID = b.USERID from
    #userid_base as b
    where a.fed_id = b.fed_id and a.USERID is null;
  create hg index HGIDX_MCCMFEDIDPROF_2 on reconp.UACI_FEDID_PROFILE2(USERID);
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.FD_OPENED = B.FD_OPENED from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.FD_OPENED) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.RD_OPENED = B.RD_OPENED from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.RD_OPENED) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.FT_DONE = B.FT_DONE from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.FT_DONE) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.BP_DONE = B.BP_DONE from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.BP_DONE) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.PMR_DONE = B.PMR_DONE from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.PMR_DONE) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.PMR_DONE = B.PMR_DONE from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.PMR_DONE) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.RIB_RAISED_SR = B.RIB_RAISED_SR from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.RIB_RAISED_SR) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.CHEQUE_BOOK_REQUEST = B.CHEQUE_BOOK_REQUEST from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.CHEQUE_BOOK_REQUEST) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.MY_MONEY = B.MY_MONEY from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.MY_MONEY) = 'Y';
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.IWISH = B.IWISH from
    MCCM.RIB_CHANNEL_ATTRIBUTE as B
    where A.USERID = B.USERID and A.FED_ID = B.FED_ID and trim(B.IWISH) = 'Y';
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  -----------------UCIC POPULATION-----------
  select A.USERID,A.UCIC_CODE,B.ACCOUNT_OPEN_DATE into #BASE_STAGE1 from MCCM.RIB_CHANNEL_ATTRIBUTE as A
      ,(select UCIC_VALUE,MIN(ACCOUNT_OPEN_DATE) as ACCOUNT_OPEN_DATE from P2C.UCIC_LINKAGE_TABLE_UPDATED_FINAL
        where ACCOUNT_CLOSE_DATE is null and SOURCE_SYSTEM_CODE in( 30,20,70,90 ) group by UCIC_VALUE) as B
    where A.UCIC_CODE = B.UCIC_VALUE;
  commit work;
  select *
    into #BASE_STAGE2
    from(select A.*,ROW_NUMBER() over(partition by USERID order by ACCOUNT_OPEN_DATE asc) as ROWNUM
        from #BASE_STAGE1 as A) as B where B.ROWNUM = 1;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.UCIC = B.UCIC_CODE from
    #BASE_STAGE2 as B
    where A.USERID = B.USERID;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  select A.USERID,A.UCIC_CODE,B.ACCOUNT_OPEN_DATE into #BASE_STAGE11 from MCCM.RIB_CHANNEL_ATTRIBUTE as A
      ,(select UCIC_VALUE,MIN(ACCOUNT_OPEN_DATE) as ACCOUNT_OPEN_DATE from P2C.UCIC_LINKAGE_TABLE_UPDATED_FINAL
        where ACCOUNT_CLOSE_DATE is null group by UCIC_VALUE) as B
    where A.UCIC_CODE = B.UCIC_VALUE;
  commit work;
  select *
    into #BASE_STAGE22
    from(select A.*,ROW_NUMBER() over(partition by USERID order by ACCOUNT_OPEN_DATE asc) as ROWNUM
        from #BASE_STAGE11 as A) as B where B.ROWNUM = 1;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.UCIC = B.UCIC_CODE from
    #BASE_STAGE22 as B
    where A.USERID = B.USERID and A.UCIC is null;
  commit work;
  select A.USERID,A.UCIC_CODE,B.ACCOUNT_OPEN_DATE into #BASE_STAGE111 from MCCM.RIB_CHANNEL_ATTRIBUTE as A
      ,(select UCIC_VALUE,MIN(ACCOUNT_OPEN_DATE) as ACCOUNT_OPEN_DATE from P2C.UCIC_LINKAGE_TABLE_UPDATED_FINAL
        group by UCIC_VALUE) as B
    where A.UCIC_CODE = B.UCIC_VALUE;
  commit work;
  select *
    into #BASE_STAGE222
    from(select A.*,ROW_NUMBER() over(partition by USERID order by ACCOUNT_OPEN_DATE asc) as ROWNUM
        from #BASE_STAGE111 as A) as B where B.ROWNUM = 1;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.UCIC = B.UCIC_CODE from
    #BASE_STAGE222 as B
    where A.USERID = B.USERID and A.UCIC is null;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  create hg index HGIDX_MCCMFEDIDPROF_3 on reconp.UACI_FEDID_PROFILE2(UCIC);
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  -----------------UCIC MASTER DATA-----------
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.TITLE = C.TITLE,
    A.FULL_NAME = C.FULL_NAME,
    A.BIRTH_DATE = C.BIRTH_DATE,
    A.GENDER = C.GENDER,
    A.AGE = C.AGE,
    A.OCCUPATION = C.OCCUPATION,
    A.MARRIED = C.MARRIED,
    A.IMOBILE_ACTIVE = C.IMOBILE_ACTIVE,
    A.INTERNET_ACTIVE = C.INTERNET_ACTIVE,
    A.ATM_ACTIVE = C.ATM_ACTIVE,
    A.POS_ACTIVE = C.POS_ACTIVE,
    A.BRANCH_ACTIVE = C.BRANCH_ACTIVE,
    A.LIABILITY_ACCT_HOLDER = C.LIABILITY_ACCT_HOLDER,
    A.CARD_ACCT_HOLDER = C.CARD_ACCT_HOLDER,
    A.DEMAT_ACCT_HOLDER = C.DEMAT_ACCT_HOLDER,
    A.LOAN_ACCT_HOLDER = C.LOAN_ACCT_HOLDER,
    A.MOBILE_ACCT_HOLDER = C.MOBILE_ACCT_HOLDER,
    A.SERVICE_REQUEST_OPEN = C.SERVICE_REQUEST_OPEN,
    A.DELIVERABLE_IN_TRANSIT = C.DELIVERABLE_IN_TRANSIT,
    A.LAST_CALLCENTER_CONTACT_DATE = C.LAST_CALLCENTER_CONTACT_DATE,
    A.SERVICE_SEGMENT = C.SERVICE_SEGMENT,
    A.INCOME_SEGMENT = C.INCOME_SEGMENT,
    A.CREDIT_SCORE = C.CREDIT_SCORE,
    A.DELINQUENT_CUSTOMER = C.DELINQUENT_CUSTOMER,
    A.FRAUD_CUSTOMER_FLAG = C.FRAUD_CUSTOMER_FLAG,
    A.AS_OF_DATE = C.AS_OF_DATE,
    A.POCKETS_ACTIVE = C.POCKET_DOWNLOADED,
    A.SHOPPING_ACTIVE = C.SHOPPING_ACTIVE from
    MCCM.UCIC_MASTER as C
    where A.UCIC = C.UCIC_CODE;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.POCKETS_ACTIVE = 'Y' from
    MCCM.XID_MAPPING as B
    where B.SOURCE_SYSTEM = 'POCKET' and A.USERID = B.USER_ID;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.ANNUAL_SALARY_OR_TURNOVER = D.ANNUAL_SALARY_OR_TURNOVER,
    A.HAVE_KIDS = D.HAVE_KIDS,
    A.SOCIAL_MEDIA_ACTIVE = D.SOCIAL_MEDIA_ACTIVE,
    A.SENTIMENT_GREVIENCES = D.SENTIMENT_GREVIENCES,
    A.DORMANT_DEMAT_ACCOUNT = D.DORMANT_DEMAT_ACCOUNT,
    A.FOREX_ACTIVE = D.FOREX_ACTIVE,
    A.TRAVEL_INSURANCE_ACTIVE = D.TRAVEL_INSURANCE_ACTIVE,
    A.TRAVEL_CARD_ACTIVE = D.TRAVEL_CARD_ACTIVE,
    A.ECOMMERECE_ACTIVE = D.ECOMMERECE_ACTIVE,
    A.PREF_MERCHANT_SHOPPING = D.PREF_MERCHANT_SHOPPING,
    A.PREF_MERCHANT_DINNING = D.PREF_MERCHANT_DINNING from
    MCCM.UCIC_ATTRIBUTE as D
    where A.UCIC = D.UCIC_CODE;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  --------------------------------IMOBILE DATA POPULATION--------------------------------------------
  select *
    into #IMOBILE
    from(select USER_ID,
        UCIC,
        LAST_LOGIN_DATE,REFEREENAME,REFEREEMOBILENO,LOG_DATE,DEVICESTATUS,
        cast(null as date) as DEVICEACTIVATIONDATE,
        cast(null as integer) as NO_OF_LOGINS,
        cast(null as varchar(5)) as CHEQUE_BOOK_REQUEST,RANK() over(partition by USER_ID order by LAST_LOGIN_DATE desc) as ROWNUM from MCCM.IMOBILE_CHANNEL_ATTRIBUTE) as B
    where B.ROWNUM = 1;
  commit work;
  update #IMOBILE as A
    set A.DEVICEACTIVATIONDATE = B.DEVICEACTIVATIONDATE from
    (select USER_ID,MIN(MAX_ENROLLMENT_DATE) as DEVICEACTIVATIONDATE from MCCM.IMOBILE_CHANNEL_ATTRIBUTE group by USER_ID) as B
    where A.USER_ID = B.USER_ID;
  commit work;
  update #IMOBILE as A
    set A.NO_OF_LOGINS = B.NO_OF_LOGINS from
    (select USER_ID,SUM(NO_OF_LOGINS) as NO_OF_LOGINS from MCCM.IMOBILE_CHANNEL_ATTRIBUTE group by USER_ID) as B
    where A.USER_ID = B.USER_ID;
  commit work;
  update #IMOBILE as A
    set A.CHEQUE_BOOK_REQUEST = B.CHEQUE_BOOK_REQUEST from
    (select USER_ID,CHEQUE_BOOK_REQUEST from MCCM.IMOBILE_CHANNEL_ATTRIBUTE where CHEQUE_BOOK_REQUEST = 'Y') as B
    where A.USER_ID = B.USER_ID;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.I_LAST_LOGIN_DATE = E.LAST_LOGIN_DATE,
    A.REFEREENAME = E.REFEREENAME,
    A.REFEREEMOBILENO = E.REFEREEMOBILENO,
    A.DEVICESTATUS = E.DEVICESTATUS,
    A.DEVICEACTIVATIONDATE = E.DEVICEACTIVATIONDATE,
    A.NO_OF_LOGINS = E.NO_OF_LOGINS,
    A.I_CHEQUE_BOOK_REQUEST = E.CHEQUE_BOOK_REQUEST,
    A.LOG_DATE = E.LOG_DATE from
    #IMOBILE as E
    where A.USERID = E.USER_ID;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  -------------CONTACTABILITY DATA----------------------
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.DNC = B.DNC from
    MCCM.CUST_CONTACT_MASTER as B
    where A.UCIC = B.UCIC_CODE;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.NDNC = B.NDNC from
    MCCM.CUST_CONTACT_MASTER as B
    where A.UCIC = B.UCIC_CODE;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.NEW_MOB_NO_REG = B.NEW_MOB_NO_REG,
    A.UPDATE_MOB_NO_REG = B.UPDATE_MOB_NO_REG,
    A.OLD_REGISTERED_MOBILE_NO = B.OLD_REGISTERED_MOBILE_NO from
    MCCM.CUSTOMER_MASTER as B
    where A.UCIC = B.UCIC_CODE;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  /*
select A.*,ACCOUNT_OPEN_DATE into #BASE_STAGE1 from reconp.UACI_FEDID_PROFILE2 as A,
(select MIN(ACCOUNT_OPEN_DATE) as ACCOUNT_OPEN_DATE,UCIC_VALUE from P2C.UCIC_LINKAGE_TABLE_UPDATED_FINAL 
where ACCOUNT_CLOSE_DATE is null group by UCIC_VALUE) as B
where A.UCIC = B.UCIC_VALUE;

commit work;

select *
into #BASE_STAGE2
from(select A.*,ROW_NUMBER() over(partition by FED_ID order by ACCOUNT_OPEN_DATE asc) as ROWNUM
from #BASE_STAGE1 as A) as B where B.ROWNUM = 1;

commit work;
*/
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.mobile_number = (case when b.R_MOBILE is null then
      (case when b.CUR_MOBILENUMBER is null then
        (case when b.PER_MOBILENUMBER is null then
          (case when b.BUS_MOBILENUMBER is null then
            (case when b.MOBILENUMBER is null then null else b.MOBILENUMBER end)
          else b.BUS_MOBILENUMBER
          end)
        else b.PER_MOBILENUMBER
        end)
      else b.CUR_MOBILENUMBER
      end) --AS MNUM  
    else b.R_MOBILE
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE
    and B.source_system_code = 30;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.mobile_number = (case when b.R_MOBILE is null then
      (case when b.CUR_MOBILENUMBER is null then
        (case when b.PER_MOBILENUMBER is null then
          (case when b.BUS_MOBILENUMBER is null then
            (case when b.MOBILENUMBER is null then null else b.MOBILENUMBER end)
          else b.BUS_MOBILENUMBER
          end)
        else b.PER_MOBILENUMBER
        end)
      else b.CUR_MOBILENUMBER
      end) --AS MNUM  
    else b.R_MOBILE
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE
    and B.source_system_code = 20 and A.mobile_number is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.mobile_number = (case when b.R_MOBILE is null then
      (case when b.CUR_MOBILENUMBER is null then
        (case when b.PER_MOBILENUMBER is null then
          (case when b.BUS_MOBILENUMBER is null then
            (case when b.MOBILENUMBER is null then null else b.MOBILENUMBER end)
          else b.BUS_MOBILENUMBER
          end)
        else b.PER_MOBILENUMBER
        end)
      else b.CUR_MOBILENUMBER
      end) --AS MNUM 
    else b.R_MOBILE
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE
    and B.source_system_code = 70 and A.mobile_number is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.mobile_number = (case when b.R_MOBILE is null then
      (case when b.CUR_MOBILENUMBER is null then
        (case when b.PER_MOBILENUMBER is null then
          (case when b.BUS_MOBILENUMBER is null then
            (case when b.MOBILENUMBER is null then null else b.MOBILENUMBER end)
          else b.BUS_MOBILENUMBER
          end)
        else b.PER_MOBILENUMBER
        end)
      else b.CUR_MOBILENUMBER
      end) --AS MNUM  
    else b.R_MOBILE
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE
    and B.source_system_code = 90 and A.mobile_number is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.mobile_number = (case when b.R_MOBILE is null then
      (case when b.CUR_MOBILENUMBER is null then
        (case when b.PER_MOBILENUMBER is null then
          (case when b.BUS_MOBILENUMBER is null then
            (case when b.MOBILENUMBER is null then null else b.MOBILENUMBER end)
          else b.BUS_MOBILENUMBER
          end)
        else b.PER_MOBILENUMBER
        end)
      else b.CUR_MOBILENUMBER
      end) --AS MNUM  
    else b.R_MOBILE
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and A.mobile_number is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.emailid = (case when R_EMAIL is null then(case when CUR_EADDRESS is null then
        (case when PER_EADDRESS is null then(case when BUS_EADDRESS is null then
            (case when EADDRESS is null then null else EADDRESS end) else BUS_EADDRESS end)
        else PER_EADDRESS
        end)
      else CUR_EADDRESS
      end)
    else R_EMAIL
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and source_system_code = 30;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.emailid = (case when R_EMAIL is null then(case when CUR_EADDRESS is null then
        (case when PER_EADDRESS is null then(case when BUS_EADDRESS is null then
            (case when EADDRESS is null then null else EADDRESS end) else BUS_EADDRESS end)
        else PER_EADDRESS
        end)
      else CUR_EADDRESS
      end)
    else R_EMAIL
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and source_system_code = 20 and A.emailid is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.emailid = (case when R_EMAIL is null then(case when CUR_EADDRESS is null then
        (case when PER_EADDRESS is null then(case when BUS_EADDRESS is null then
            (case when EADDRESS is null then null else EADDRESS end) else BUS_EADDRESS end)
        else PER_EADDRESS
        end)
      else CUR_EADDRESS
      end)
    else R_EMAIL
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and source_system_code = 70 and A.emailid is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.emailid = (case when R_EMAIL is null then(case when CUR_EADDRESS is null then
        (case when PER_EADDRESS is null then(case when BUS_EADDRESS is null then
            (case when EADDRESS is null then null else EADDRESS end) else BUS_EADDRESS end)
        else PER_EADDRESS
        end)
      else CUR_EADDRESS
      end)
    else R_EMAIL
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and source_system_code = 90 and A.emailid is null;
  commit work;
  update reconp.UACI_FEDID_PROFILE2 as A
    set A.emailid = (case when R_EMAIL is null then(case when CUR_EADDRESS is null then
        (case when PER_EADDRESS is null then(case when BUS_EADDRESS is null then
            (case when EADDRESS is null then null else EADDRESS end) else BUS_EADDRESS end)
        else PER_EADDRESS
        end)
      else CUR_EADDRESS
      end)
    else R_EMAIL
    end) from
    mccm.cust_contact_master as B
    where A.UCIC = B.UCIC_CODE and A.emailid is null;
  commit work;
  if sqlstate <> '00000' then
    return
  end if;
  commit work;
  truncate table MCCM.UACI_FEDID_PROFILE;
  commit work;
  insert into MCCM.UACI_FEDID_PROFILE select * from reconp.UACI_FEDID_PROFILE2;
  if sqlstate <> '00000' then
    return
  end if;
  commit work
--drop table reconp.UACI_FEDID_PROFILE2;
--commit work;
end
